datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String    @unique
  password  String    @db.VarChar(100)
  role      String    @default("customer")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  addresses Address[]
  payments  Payment[]
  carts     Cart[]
  orders    Order[]
}

model Address {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  street     String
  city       String
  state      String
  postalCode String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Payment {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  cardNumber String   @db.VarChar(16)
  cardHolder String
  expMonth   String   @db.Char(2)
  expYear    String   @db.Char(4)
  cvv        String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  items     Item[]
  subTotal  Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id        Int      @id @default(autoincrement())
  cartId    Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  image     String
  price     Float
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  image       String
  price       Float
  inventory   Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
  categories  Category[]  @relation("ProductToCategory")
  Item        Item[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[] @relation("ProductToCategory")
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Item      Item[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Float
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
}
